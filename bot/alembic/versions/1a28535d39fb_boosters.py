"""boosters

Revision ID: 1a28535d39fb
Revises: b725cef0d49d
Create Date: 2024-05-18 17:59:51.986156

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1a28535d39fb'
down_revision: Union[str, None] = 'b725cef0d49d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('booster_pack',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('image_label', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['image_label'], ['images.label'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('booster_segments',
    sa.Column('booster_pack_id', sa.String(), nullable=False),
    sa.Column('num_cards_to_draw', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['booster_pack_id'], ['booster_pack.id'], ),
    sa.PrimaryKeyConstraint('booster_pack_id', 'id')
    )
    op.create_table('booster_card',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('booster_pack_id', sa.String(), nullable=False),
    sa.Column('booster_segment_id', sa.String(), nullable=False),
    sa.Column('chance', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['booster_pack_id', 'booster_segment_id'], ['booster_segments.booster_pack_id', 'booster_segments.id'], ),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('booster_card')
    op.drop_table('booster_segments')
    op.drop_table('booster_pack')
    # ### end Alembic commands ###
